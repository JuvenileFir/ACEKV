GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /home/bwb/GPCode/ProtoKV/build/main...
[New LWP 1364997]
[New LWP 1364954]
[New LWP 1364956]
[New LWP 1364998]
[New LWP 1364964]
[New LWP 1364962]
[New LWP 1364963]
[New LWP 1364957]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Core was generated by `./main -f 3'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000559800deac22 in Piekv::try_find_insert_bucket (this=0x559803ece6e0, bucket_=0x7f98b9844ad0, slot=0x7f98b5fefa14, tag=16, key=0x101aaef52 <error: Cannot access memory at address 0x101aaef52>, keylength=8)
    at /home/bwb/GPCode/ProtoKV/operation.cc:63
63					if (key_eq(item->data, ITEMKEY_LENGTH(item->kv_length_vec), key, keylength)) {
[Current thread is 1 (Thread 0x7f98b5ff0700 (LWP 1364997))]
(gdb) list
58				if (TAG(bucket_->item_vec[i]) == tag) {
59					LogItem *item = mempool_->locate_item(SEG(bucket_->item_vec[i]), ITEM_OFFSET(bucket_->item_vec[i]));
60					// printf("[INFO]log_key_len:%d\t", ITEMKEY_LENGTH(item->kv_length_vec));
61					// printf("key_len:%d\n",keylength);
62	
63					if (key_eq(item->data, ITEMKEY_LENGTH(item->kv_length_vec), key, keylength)) {
64					// printf("[INFO]key比较相同!!\n");
65						
66						*slot = i;
67						return key_duplicated;//发现有key重复（val不作判断，返回false）
(gdb) bt -n
#0  0x0000559800deac22 in Piekv::try_find_insert_bucket (this=0x559803ece6e0, bucket_=0x7f98b9844ad0, slot=0x7f98b5fefa14, tag=16, key=0x101aaef52 <error: Cannot access memory at address 0x101aaef52>, keylength=8)
    at /home/bwb/GPCode/ProtoKV/operation.cc:63
#1  0x0000559800deadae in Piekv::cuckoo_insert (this=0x559803ece6e0, keyhash=279510088212843963, tag=16, tb=..., key=0x101aaef52 <error: Cannot access memory at address 0x101aaef52>, keylength=8)
    at /home/bwb/GPCode/ProtoKV/operation.cc:114
#2  0x0000559800deb4e3 in Piekv::set (this=0x559803ece6e0, t_id=0, key_hash=279510088212843963, key=0x101aaef52 <error: Cannot access memory at address 0x101aaef52>, key_len=8, 
    val=0x101aaef62 <error: Cannot access memory at address 0x101aaef62>, val_len=8, overwrite=false) at /home/bwb/GPCode/ProtoKV/operation.cc:319
#3  0x0000559800dfd363 in RTWorker::parse_set (this=0x559803bd6f60) at /home/bwb/GPCode/ProtoKV/communication.cc:86
#4  0x0000559800dfdd24 in RTWorker::worker_proc (this=0x559803bd6f60) at /home/bwb/GPCode/ProtoKV/communication.cc:276
#5  0x0000559800de9e46 in std::__invoke_impl<void, void (RTWorker::*)(), RTWorker*> (__f=@0x55980456dfe0: (void (RTWorker::*)(RTWorker * const)) 0x559800dfd974 <RTWorker::worker_proc()>, __t=@0x55980456dfd8: 0x559803bd6f60)
    at /usr/include/c++/9/bits/invoke.h:73
#6  0x0000559800de9ca9 in std::__invoke<void (RTWorker::*)(), RTWorker*> (__fn=@0x55980456dfe0: (void (RTWorker::*)(RTWorker * const)) 0x559800dfd974 <RTWorker::worker_proc()>) at /usr/include/c++/9/bits/invoke.h:95
#7  0x0000559800de9b67 in std::thread::_Invoker<std::tuple<void (RTWorker::*)(), RTWorker*> >::_M_invoke<0ul, 1ul> (this=0x55980456dfd8) at /usr/include/c++/9/thread:244
#8  0x0000559800de9ace in std::thread::_Invoker<std::tuple<void (RTWorker::*)(), RTWorker*> >::operator() (this=0x55980456dfd8) at /usr/include/c++/9/thread:251
#9  0x0000559800de9a48 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (RTWorker::*)(), RTWorker*> > >::_M_run (this=0x55980456dfd0) at /usr/include/c++/9/thread:195
#10 0x00007f9d0cddfde4 in ?? () from /lib/x86_64-linux-gnu/libstdc++.so.6
#11 0x00007f9d0cefb609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#12 0x00007f9d0cacc133 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
(gdb) disassemble
Dump of assembler code for function Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int):
   0x0000559800deaaf0 <+0>:	endbr64 
   0x0000559800deaaf4 <+4>:	push   %rbp
   0x0000559800deaaf5 <+5>:	mov    %rsp,%rbp
   0x0000559800deaaf8 <+8>:	sub    $0x60,%rsp
   0x0000559800deaafc <+12>:	mov    %rdi,-0x38(%rbp)
   0x0000559800deab00 <+16>:	mov    %rsi,-0x40(%rbp)
   0x0000559800deab04 <+20>:	mov    %rdx,-0x48(%rbp)
   0x0000559800deab08 <+24>:	mov    %ecx,%eax
   0x0000559800deab0a <+26>:	mov    %r8,-0x58(%rbp)
   0x0000559800deab0e <+30>:	mov    %r9d,-0x50(%rbp)
   0x0000559800deab12 <+34>:	mov    %ax,-0x4c(%rbp)
   0x0000559800deab16 <+38>:	mov    -0x38(%rbp),%rax
   0x0000559800deab1a <+42>:	mov    0x18(%rax),%rax
   0x0000559800deab1e <+46>:	movzwl -0x4c(%rbp),%edx
   0x0000559800deab22 <+50>:	and    $0x3,%edx
   0x0000559800deab25 <+53>:	movslq %edx,%rdx
   0x0000559800deab28 <+56>:	mov    0x8(%rax,%rdx,8),%rax
   0x0000559800deab2d <+61>:	mov    %rax,-0x20(%rbp)
   0x0000559800deab31 <+65>:	mov    -0x38(%rbp),%rax
   0x0000559800deab35 <+69>:	mov    (%rax),%rax
   0x0000559800deab38 <+72>:	mov    0x20018(%rax),%rax
   0x0000559800deab3f <+79>:	mov    (%rax),%rax
   0x0000559800deab42 <+82>:	cmp    $0x5999999,%rax
   0x0000559800deab48 <+88>:	seta   %al
   0x0000559800deab4b <+91>:	mov    %al,-0x21(%rbp)
   0x0000559800deab4e <+94>:	movb   $0x0,-0x1(%rbp)
   0x0000559800deab52 <+98>:	movb   $0x0,-0x2(%rbp)
   0x0000559800deab56 <+102>:	movl   $0x100,-0x8(%rbp)
   0x0000559800deab5d <+109>:	mov    -0x48(%rbp),%rax
   0x0000559800deab61 <+113>:	movl   $0x7,(%rax)
   0x0000559800deab67 <+119>:	movl   $0x0,-0x14(%rbp)
   0x0000559800deab6e <+126>:	cmpl   $0x6,-0x14(%rbp)
   0x0000559800deab72 <+130>:	ja     0x559800deacf8 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+520>
   0x0000559800deab78 <+136>:	mov    -0x40(%rbp),%rax
   0x0000559800deab7c <+140>:	mov    -0x14(%rbp),%edx
   0x0000559800deab7f <+143>:	mov    0x8(%rax,%rdx,8),%rax
   0x0000559800deab84 <+148>:	mov    %rax,%rdi
   0x0000559800deab87 <+151>:	callq  0x559800dfe533 <is_entry_expired(unsigned long)>
   0x0000559800deab8c <+156>:	test   %eax,%eax
   0x0000559800deab8e <+158>:	setne  %al
   0x0000559800deab91 <+161>:	test   %al,%al
   0x0000559800deab93 <+163>:	je     0x559800deabb6 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+198>
   0x0000559800deab95 <+165>:	movzbl -0x1(%rbp),%eax
   0x0000559800deab99 <+169>:	xor    $0x1,%eax
   0x0000559800deab9c <+172>:	test   %al,%al
   0x0000559800deab9e <+174>:	je     0x559800deacf0 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+512>
   0x0000559800deaba4 <+180>:	movb   $0x1,-0x1(%rbp)
   0x0000559800deaba8 <+184>:	mov    -0x48(%rbp),%rax
   0x0000559800deabac <+188>:	mov    -0x14(%rbp),%edx
   0x0000559800deabaf <+191>:	mov    %edx,(%rax)
   0x0000559800deabb1 <+193>:	jmpq   0x559800deacf0 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+512>
   0x0000559800deabb6 <+198>:	mov    -0x40(%rbp),%rax
   0x0000559800deabba <+202>:	mov    -0x14(%rbp),%edx
   0x0000559800deabbd <+205>:	mov    0x8(%rax,%rdx,8),%rax
   0x0000559800deabc2 <+210>:	shr    $0x38,%rax
   0x0000559800deabc6 <+214>:	mov    %rax,%rdx
   0x0000559800deabc9 <+217>:	movzwl -0x4c(%rbp),%eax
   0x0000559800deabcd <+221>:	cmp    %rax,%rdx
   0x0000559800deabd0 <+224>:	jne    0x559800deac5d <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+365>
   0x0000559800deabd6 <+230>:	mov    -0x38(%rbp),%rax
   0x0000559800deabda <+234>:	mov    0x10(%rax),%rax
   0x0000559800deabde <+238>:	mov    -0x40(%rbp),%rdx
   0x0000559800deabe2 <+242>:	mov    -0x14(%rbp),%ecx
   0x0000559800deabe5 <+245>:	mov    0x8(%rdx,%rcx,8),%rcx
   0x0000559800deabea <+250>:	movabs $0xffffffffffff,%rdx
   0x0000559800deabf4 <+260>:	and    %rcx,%rdx
   0x0000559800deabf7 <+263>:	mov    -0x40(%rbp),%rcx
   0x0000559800deabfb <+267>:	mov    -0x14(%rbp),%esi
   0x0000559800deabfe <+270>:	mov    0x8(%rcx,%rsi,8),%rcx
   0x0000559800deac03 <+275>:	shr    $0x38,%rcx
   0x0000559800deac07 <+279>:	movzwl %cx,%ecx
   0x0000559800deac0a <+282>:	and    $0x3,%ecx
   0x0000559800deac0d <+285>:	mov    %ecx,%esi
   0x0000559800deac0f <+287>:	mov    %rax,%rdi
   0x0000559800deac12 <+290>:	callq  0x559800dfe20a <MemPool::locate_item(unsigned short, unsigned long)>
   0x0000559800deac17 <+295>:	mov    %rax,-0x30(%rbp)
   0x0000559800deac1b <+299>:	mov    -0x50(%rbp),%edx
   0x0000559800deac1e <+302>:	mov    -0x30(%rbp),%rax
=> 0x0000559800deac22 <+306>:	mov    0xc(%rax),%eax
   0x0000559800deac25 <+309>:	shr    $0x18,%eax
   0x0000559800deac28 <+312>:	mov    %eax,%esi
   0x0000559800deac2a <+314>:	mov    -0x30(%rbp),%rax
   0x0000559800deac2e <+318>:	lea    0x18(%rax),%rdi
   0x0000559800deac32 <+322>:	mov    -0x58(%rbp),%rax
   0x0000559800deac36 <+326>:	mov    %rdx,%rcx
   0x0000559800deac39 <+329>:	mov    %rax,%rdx
   0x0000559800deac3c <+332>:	callq  0x559800dfe54c <key_eq(unsigned char const*, unsigned long, unsigned char const*, unsigned long)>
   0x0000559800deac41 <+337>:	test   %eax,%eax
   0x0000559800deac43 <+339>:	setne  %al
   0x0000559800deac46 <+342>:	test   %al,%al
   0x0000559800deac48 <+344>:	je     0x559800deac5d <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+365>
   0x0000559800deac4a <+346>:	mov    -0x48(%rbp),%rax
   0x0000559800deac4e <+350>:	mov    -0x14(%rbp),%edx
   0x0000559800deac51 <+353>:	mov    %edx,(%rax)
   0x0000559800deac53 <+355>:	mov    $0x0,%eax
   0x0000559800deac58 <+360>:	jmpq   0x559800dead2e <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+574>
   0x0000559800deac5d <+365>:	cmpb   $0x0,-0x21(%rbp)
   0x0000559800deac61 <+369>:	je     0x559800deaca4 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+436>
   0x0000559800deac63 <+371>:	movzbl -0x2(%rbp),%eax
   0x0000559800deac67 <+375>:	xor    $0x1,%eax
   0x0000559800deac6a <+378>:	test   %al,%al
   0x0000559800deac6c <+380>:	je     0x559800deaca4 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+436>
   0x0000559800deac6e <+382>:	mov    -0x40(%rbp),%rax
   0x0000559800deac72 <+386>:	mov    -0x14(%rbp),%edx
   0x0000559800deac75 <+389>:	mov    0x8(%rax,%rdx,8),%rdx
   0x0000559800deac7a <+394>:	movabs $0xffffffffffff,%rax
   0x0000559800deac84 <+404>:	and    %rax,%rdx
   0x0000559800deac87 <+407>:	mov    -0x20(%rbp),%rax
   0x0000559800deac8b <+411>:	mov    %rdx,%rsi
   0x0000559800deac8e <+414>:	mov    %rax,%rdi
   0x0000559800deac91 <+417>:	callq  0x559800dea360 <LogSegment::is_valid(unsigned long)>
   0x0000559800deac96 <+422>:	xor    $0x1,%eax
   0x0000559800deac99 <+425>:	test   %al,%al
   0x0000559800deac9b <+427>:	je     0x559800deaca4 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+436>
   0x0000559800deac9d <+429>:	mov    $0x1,%eax
   0x0000559800deaca2 <+434>:	jmp    0x559800deaca9 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+441>
   0x0000559800deaca4 <+436>:	mov    $0x0,%eax
   0x0000559800deaca9 <+441>:	test   %al,%al
   0x0000559800deacab <+443>:	je     0x559800deacb7 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+455>
   0x0000559800deacad <+445>:	movb   $0x1,-0x2(%rbp)
   0x0000559800deacb1 <+449>:	mov    -0x14(%rbp),%eax
   0x0000559800deacb4 <+452>:	mov    %eax,-0x10(%rbp)
   0x0000559800deacb7 <+455>:	mov    -0x40(%rbp),%rax
   0x0000559800deacbb <+459>:	mov    -0x14(%rbp),%edx
   0x0000559800deacbe <+462>:	mov    0x8(%rax,%rdx,8),%rax
   0x0000559800deacc3 <+467>:	shr    $0x30,%rax
   0x0000559800deacc7 <+471>:	movzbl %al,%edx
   0x0000559800deacca <+474>:	mov    -0x8(%rbp),%eax
   0x0000559800deaccd <+477>:	cmp    %rax,%rdx
   0x0000559800deacd0 <+480>:	jae    0x559800deacf0 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+512>
   0x0000559800deacd2 <+482>:	mov    -0x40(%rbp),%rax
   0x0000559800deacd6 <+486>:	mov    -0x14(%rbp),%edx
   0x0000559800deacd9 <+489>:	mov    0x8(%rax,%rdx,8),%rax
   0x0000559800deacde <+494>:	shr    $0x30,%rax
   0x0000559800deace2 <+498>:	and    $0xff,%eax
   0x0000559800deace7 <+503>:	mov    %eax,-0x8(%rbp)
   0x0000559800deacea <+506>:	mov    -0x14(%rbp),%eax
   0x0000559800deaced <+509>:	mov    %eax,-0xc(%rbp)
   0x0000559800deacf0 <+512>:	incl   -0x14(%rbp)
   0x0000559800deacf3 <+515>:	jmpq   0x559800deab6e <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+126>
   0x0000559800deacf8 <+520>:	movzbl -0x1(%rbp),%eax
   0x0000559800deacfc <+524>:	xor    $0x1,%eax
   0x0000559800deacff <+527>:	test   %al,%al
   0x0000559800dead01 <+529>:	je     0x559800dead29 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+569>
   0x0000559800dead03 <+531>:	cmpb   $0x0,-0x2(%rbp)
   0x0000559800dead07 <+535>:	je     0x559800dead19 <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+553>
   0x0000559800dead09 <+537>:	mov    -0x48(%rbp),%rax
   0x0000559800dead0d <+541>:	mov    -0x10(%rbp),%edx
   0x0000559800dead10 <+544>:	mov    %edx,(%rax)
   0x0000559800dead12 <+546>:	mov    $0x3,%eax
   0x0000559800dead17 <+551>:	jmp    0x559800dead2e <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+574>
   0x0000559800dead19 <+553>:	mov    -0x48(%rbp),%rax
   0x0000559800dead1d <+557>:	mov    -0xc(%rbp),%edx
   0x0000559800dead20 <+560>:	mov    %edx,(%rax)
   0x0000559800dead22 <+562>:	mov    $0x2,%eax
   0x0000559800dead27 <+567>:	jmp    0x559800dead2e <Piekv::try_find_insert_bucket(Bucket*, unsigned int*, unsigned short, unsigned char const*, unsigned int)+574>
   0x0000559800dead29 <+569>:	mov    $0x1,%eax
   0x0000559800dead2e <+574>:	leaveq 
   0x0000559800dead2f <+575>:	retq   
End of assembler dump.
(gdb) q
