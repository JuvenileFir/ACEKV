GNU gdb (Ubuntu 9.2-0ubuntu1~20.04.1) 9.2
Copyright (C) 2020 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from /home/bwb/GPCode/ProtoKV/build/main...
[New LWP 1528353]
[New LWP 1528318]
[New LWP 1528354]
[New LWP 1528319]
[New LWP 1528321]
[New LWP 1528322]
[New LWP 1528323]
[New LWP 1528320]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Core was generated by `./main -f 3'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x0000561219c7cd98 in run_cuckoo (ptr=0x7f9ed1ff7010, tb=..., insertbucket=0x0, insertslot=0x0) at /home/bwb/GPCode/ProtoKV/cuckoo.cc:167
167	      *insertbucket = cuckoopath[0].bucket;
[Current thread is 1 (Thread 0x7f9ed1ff6700 (LWP 1528353))]
(gdb) list
162	  while (!done) {
163	    int depth = cuckoopath_search(ptr, cuckoopath, tb.b1, tb.b2);//实现了BFS路径寻找及记录，最长路径是5，超过5直接返回-1
164	    if (depth < 0) break;
165	
166	    if (__glibc_likely(cuckoopath_move(ptr, cuckoopath, depth, &tb))) {//正常情况下这个if就是直接过了
167	      *insertbucket = cuckoopath[0].bucket;
168	      *insertslot = cuckoopath[0].slot;
169	      assert(*insertbucket == tb.b1 || *insertbucket == tb.b2);
170	      assert(is_entry_expired(ptr[*insertbucket].item_vec[*insertslot]));
171	      done = true;
(gdb) bt -n
#0  0x0000561219c7cd98 in run_cuckoo (ptr=0x7f9ed1ff7010, tb=..., insertbucket=0x0, insertslot=0x0) at /home/bwb/GPCode/ProtoKV/cuckoo.cc:167
#1  0x0000561219c68f83 in Piekv::cuckoo_insert (this=0x56121bbecfd0, keyhash=12760880971682460480, tag=44, tb=..., key=0x101dde6b2 <error: Cannot access memory at address 0x101dde6b2>, keylength=8)
    at /home/bwb/GPCode/ProtoKV/operation.cc:157
#2  0x0000561219c694e3 in Piekv::set (this=0x56121bbecfd0, t_id=0, key_hash=12760880971682460480, key=0x101dde6b2 <error: Cannot access memory at address 0x101dde6b2>, key_len=8, 
    val=0x101dde6c2 <error: Cannot access memory at address 0x101dde6c2>, val_len=8, overwrite=false) at /home/bwb/GPCode/ProtoKV/operation.cc:319
#3  0x0000561219c7b363 in RTWorker::parse_set (this=0x56121beeaaf0) at /home/bwb/GPCode/ProtoKV/communication.cc:86
#4  0x0000561219c7bd24 in RTWorker::worker_proc (this=0x56121beeaaf0) at /home/bwb/GPCode/ProtoKV/communication.cc:276
#5  0x0000561219c67e46 in std::__invoke_impl<void, void (RTWorker::*)(), RTWorker*> (__f=@0x56121bbecfb0: (void (RTWorker::*)(RTWorker * const)) 0x561219c7b974 <RTWorker::worker_proc()>, __t=@0x56121bbecfa8: 0x56121beeaaf0)
    at /usr/include/c++/9/bits/invoke.h:73
#6  0x0000561219c67ca9 in std::__invoke<void (RTWorker::*)(), RTWorker*> (__fn=@0x56121bbecfb0: (void (RTWorker::*)(RTWorker * const)) 0x561219c7b974 <RTWorker::worker_proc()>) at /usr/include/c++/9/bits/invoke.h:95
#7  0x0000561219c67b67 in std::thread::_Invoker<std::tuple<void (RTWorker::*)(), RTWorker*> >::_M_invoke<0ul, 1ul> (this=0x56121bbecfa8) at /usr/include/c++/9/thread:244
#8  0x0000561219c67ace in std::thread::_Invoker<std::tuple<void (RTWorker::*)(), RTWorker*> >::operator() (this=0x56121bbecfa8) at /usr/include/c++/9/thread:251
#9  0x0000561219c67a48 in std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (RTWorker::*)(), RTWorker*> > >::_M_run (this=0x56121bbecfa0) at /usr/include/c++/9/thread:195
#10 0x00007fa32d81dde4 in ?? () from /lib/x86_64-linux-gnu/libstdc++.so.6
#11 0x00007fa32d939609 in start_thread (arg=<optimized out>) at pthread_create.c:477
#12 0x00007fa32d50a133 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
(gdb) q
